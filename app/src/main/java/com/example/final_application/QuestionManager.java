package com.example.final_application;

public class QuestionManager {

    public static String question1[] = {
            "ข้อที่ 1: ข้อใดเป็นชนิดข้อมูลพื้นฐานใน JavaScript ที่ใช้เก็บตัวเลข?",
            "ข้อที่ 2: ข้อใดเป็นวิธีการประกาศตัวแปรที่สามารถเปลี่ยนแปลงค่าได้ในภายหลัง?",
            "ข้อที่ 3: ชนิดข้อมูลใดใน JavaScript ที่มีค่าเพียงสองค่าเท่านั้น คือ `true` และ `false`?",
            "ข้อที่ 4: ตัวแปรที่ถูกประกาศแต่ยังไม่ได้กำหนดค่าเริ่มต้น จะมีชนิดข้อมูลเป็นอะไร?",
            "ข้อที่ 5: ข้อใดเป็นวิธีที่ถูกต้องในการประกาศตัวแปรที่เก็บข้อความใน JavaScript?",
            "ข้อที่ 6: ชนิดข้อมูลใดใน JavaScript ที่ใช้เก็บกลุ่มของข้อมูลในรูปแบบ 'คีย์-ค่า'?",
            "ข้อที่ 7: ข้อใดเป็นชนิดข้อมูลที่ใช้เก็บรายการของข้อมูลหลายๆ ค่าเรียงกัน?",
            "ข้อที่ 8: ค่า `null` ใน JavaScript มีชนิดข้อมูลเป็นอะไรเมื่อใช้ `typeof` ตรวจสอบ?",
            "ข้อที่ 9: ข้อใดเป็นตัวอย่างของ 'String' ใน JavaScript?",
            "ข้อที่ 10: ตัวแปรที่ประกาศด้วยคำสั่งใดต่อไปนี้ จะมีค่าคงที่ ไม่สามารถเปลี่ยนแปลงค่าได้หลังจากกำหนดค่าเริ่มต้น?",
    };

    // choices
    public static String choices1[][] = {
            {"String", "Number", "Boolean", "Object"},
            {"const", "final", "var", "let"},
            {"Text", "Integer", "Boolean", "Character"},
            {"Null", "Undefined", "NaN", "0"},
            {"int message = \"Hello\";", "string message = 'World';", "let message = `Hello World`;", "char message = 'H';"},
            {"Array", "Tuple", "Object", "Set"},
            {"Object", "Array", "String", "Number"},
            {"number", "string", "object", "null"},
            {"123", "true", "`Hello World`", "{ key: 'value' }"},
            {"var", "let", "const", "variable"},
    };

    // answer index is (0, 1, 2, 3)
    public static int answer1[] = {
            1,
            3,
            2,
            1,
            2,
            2,
            1,
            2,
            2,
            2,
    };

    public static String question2[] = {
            "ข้อที่ 1: คำสั่งใดใช้สร้างตัวแปรที่ไม่สามารถเปลี่ยนค่าได้?",
            "ข้อที่ 2: ผลลัพธ์ของโค้ดนี้คืออะไร?\n" +
                    "console.log(a);  \n" +
                    "var a = 5;",
            "ข้อที่ 3: คำสั่งใดผิดพลาดใน JavaScript?",
            "ข้อที่ 4: ขอบเขตของตัวแปร let คืออะไร?",
            "ข้อที่ 5: ข้อใดเป็นตัวแปรที่ถูกต้อง?",
            "ข้อที่ 6: คำสั่งใดที่สามารถเปลี่ยนค่าของตัวแปรได้?",
            "ข้อที่ 7: ผลลัพธ์ของโค้ดนี้คืออะไร? \n" +
                    "{ let a = 100; }\n" +
                    "console.log(a);",
            "ข้อที่ 8: คำสั่งใดที่ไม่สามารถใช้ได้ใน JavaScript?",
            "ข้อที่ 9: ข้อใดเป็นผลลัพธ์ของโค้ดต่อไปนี้? \n"+
                    "let x = 10;" + "const y = 5;\n" +
                    "x = x + y;\n" +
                    "console.log(x);",
            "ข้อที่ 10: ผลลัพธ์ของโค้ดนี้จะเป็นอะไร? \n" +
                    "let x = 10;" + "const y = 5;\n" +
                    "y = x + y;\n" +
                    "console.log(y);",
    };

    // choices
    public static String choices2[][] = {
            {"var myVar = 10;", "let myVar = 10", "const myVar = 10", "variable myVar = 10"},
            {"undefined", "5", "ReferenceError", "null"},
            {"let x = 10", "const y;", "var z = \"Hello\";", "let a = 20;"},
            {"Global Scope", "Function Scope", "Block Scope", "ไม่มีขอบเขต"},
            {"var 2name = \"John\";", "let _userName = \"Doe\";", "const my-var = 50;", "let let = 30;"},
            {"const x = 10; x = 20;", "let x = 10; x = 20;", "var x = 10; const x = 20;", "let x = 10; let x = 20;"},
            {"100", "undefined", "ReferenceError", "null"},
            {"const pi = 3.14;", "var let = 10;", "let userName = \"Alice\";", "var x = 100;"},
            {"5", "10", "`15`", "Error! เปลี่ยนค่า const ไม่ได้"},
            {"5", "10", "`15`", "Error! เปลี่ยนค่า const ไม่ได้"},
    };

    // answer index is (0, 1, 2, 3)
    public static int answer2[] = {
            2, // "const myVar = 10"
            0, // "undefined (เพราะ Hoisting)"
            1, // "const y; (เพราะ const ต้องกำหนดค่าตั้งแต่ประกาศ)"
            2, // "Block Scope"
            1, // "let _userName = "Doe";"
            1, // "let x = 10; x = 20;"
            2, // "ReferenceError"
            1, // "var let = 10;"
            2, // "15"
            2, // "15"
    };

    public static String question3[] = {
            "ข้อที่ 1: ผลลัพธ์ของ console.log(5 + \"5\") คืออะไร?",
            "ข้อที่ 2: ผลลัพธ์ของ console.log(5 == \"5\") คืออะไร?",
            "ข้อที่ 3: ข้อใดให้ผลลัพธ์เป็น false?",
            "ข้อที่ 4: ผลลัพธ์ของ console.log(10 % 3) คืออะไร?",
            "ข้อที่ 5: ตัวดำเนินการใดที่ใช้สำหรับยกกำลัง?",
            "ข้อที่ 6: ค่าของ x หลังจาก let x = 10; x += 5; คืออะไร?",
            "ข้อที่ 7: console.log(!!0) จะได้ค่าอะไร?",
            "ข้อที่ 8: ผลลัพธ์ของ console.log(\"10\" - 2) คืออะไร?",
            "ข้อที่ 9: console.log(5 > 3 && 10 < 2) ให้ค่าอะไร?",
            "ข้อที่ 10: ตัวดำเนินการ x-- มีค่าเท่ากับข้อใด?" ,
    };

    // choices
    public static String choices3[][] = {
            {"10", "\"55\"", "5", "NaN"},
            {"true", "false", "undefined", "NaN"},
            {"5 > 3 && 2 < 4", "5 == \"5\"", "5 === \"5\"", "true || false"},
            {"3", "1", "0", "NaN"},
            {"^", "**", "//", "%"},
            {"5", "10", "15", "20"},
            {"true", "false", "undefined", "NaN"},
            {"\"102\"", "8", "10", "NaN"},
            {"true", "false", "undefined", "NaN"},
            {"x = x + 1", "x = x - 1", "x += 1", "x -= 2"},
    };

    // answer index is (0, 1, 2, 3)
    public static int answer3[] = {
            1, // "55" (เนื่องจาก + ใช้รวม string และ number)
            0, // true (เพราะ == ไม่สนใจชนิดข้อมูล)
            2, //  5 === "5" (เนื่องจาก === เช็คชนิดข้อมูลด้วย)
            1, // 1 (เพราะ 10 หาร 3 เหลือเศษ 1)
            1, // ** (ใช้สำหรับยกกำลัง เช่น 2 ** 3 ได้ 8)
            2, // 15 (เพราะ x += 5 เทียบเท่ากับ x = x + 5)
            1, // false (เพราะ 0 เป็น falsy และ !!0 แปลงเป็นบูลีน)
            1, // 8 (เพราะ - แปลง string เป็น number)
            1, // false (เพราะ 10 < 2 เป็น false)
            1, // x = x - 1 (เพราะ x-- ลดค่า x ลง 1)
    };

    public static String question4[] = {
            "ข้อที่ 1: คำสั่งควบคุมแบบใดใช้ในการตรวจสอบเงื่อนไขใน JavaScript?",
            "ข้อที่ 2: คำสั่งใดใช้สำหรับการวนลูปเมื่อเรารู้จำนวนรอบที่แน่นอน?",
            "ข้อที่ 3: คำสั่ง if-else ใช้สำหรับอะไร?",
            "ข้อที่ 4: คำสั่ง break ใช้สำหรับอะไรในลูป?",
            "ข้อที่ 5: ลูป do...while ต่างจาก while อย่างไร?",
            "ข้อที่ 6: คำสั่ง switch ควรใช้เมื่อใด?",
            "ข้อที่ 7: คำสั่ง continue ใช้ทำอะไรในลูป?",
            "ข้อที่ 8: ลูป for...of ใช้สำหรับอะไร?",
            "ข้อที่ 9: คำสั่ง try...catch ใช้สำหรับอะไร?",
            "ข้อที่ 10: เงื่อนไข if-else ทำงานอย่างไร?",
    };

    // choices
    public static String choices4[][] = {
            {"for", "switch", "while", "function"},
            {"while", "do...while", "for", "if"},
            {"ใช้ในการวนซ้ำ", "ใช้ในการเปรียบเทียบค่าของ Object", "ใช้ในการกำหนดเงื่อนไข", "ใช้ในการเรียกใช้ฟังก์ชัน"},
            {"ข้ามรอบปัจจุบันของลูป", "หยุดลูปทันที", "เพิ่มค่าตัวแปรในลูป", "ทำให้ลูปทำงานไม่จำกัด"},
            {"do...while จะตรวจสอบเงื่อนไขก่อนทำงาน", "do...while จะทำงานก่อนแล้วค่อยตรวจสอบเงื่อนไข", "do...while ใช้ได้เฉพาะกับ Array", "ไม่มีความแตกต่างกัน"},
            {"เมื่อต้องการตรวจสอบค่าหลายค่าโดยใช้ตัวแปรเดียวกัน", "เมื่อต้องการทำงานซ้ำ ๆ ตามเงื่อนไข", "เมื่อต้องการเปรียบเทียบค่าที่มีแค่ true หรือ false", "เมื่อต้องการจัดการข้อผิดพลาดของโปรแกรม"},
            {"หยุดลูปทันที", "ข้ามรอบปัจจุบัน แล้วไปยังรอบถัดไป", "ทำให้ลูปทำงานไม่จำกัด", "ใช้กำหนดค่าตัวแปรในลูป"},
            {"วนลูปผ่านค่าใน Object", "วนลูปผ่านค่าของ Array หรือ Iterable Object", "ใช้สร้างตัวแปรใหม่ในลูป", "ใช้เปรียบเทียบค่าตัวแปร"},
            {"ใช้จัดการข้อผิดพลาดที่อาจเกิดขึ้นในโค้ด", "ใช้เปลี่ยนค่าตัวแปร", "ใช้ควบคุมเงื่อนไข", "ใช้เรียกใช้งานฟังก์ชัน"},
            {"ตรวจสอบเงื่อนไขและเลือกทำงานตามเงื่อนไขที่เป็นจริง", "ใช้สร้างลูปที่ทำงานซ้ำ ๆ", "ใช้จัดการข้อผิดพลาดของโค้ด", "ใช้ในการประกาศตัวแปร"},
    };

    // answer index is (0, 1, 2, 3)
    public static int answer4[] = {
            1, // B) switch
            2, // C) for
            2, // C) ใช้ในการกำหนดเงื่อนไข
            1, // B) หยุดลูปทันที
            1, // B) do...while จะทำงานก่อนแล้วค่อยตรวจสอบเงื่อนไข
            0, // A) เมื่อต้องการตรวจสอบค่าหลายค่าโดยใช้ตัวแปรเดียวกัน
            1, // B) ข้ามรอบปัจจุบัน แล้วไปยังรอบถัดไป
            1, // B) วนลูปผ่านค่าของ Array หรือ Iterable Object
            0, // A) ใช้จัดการข้อผิดพลาดที่อาจเกิดขึ้นในโค้ด
            0, // A) ตรวจสอบเงื่อนไขและเลือกทำงานตามเงื่อนไขที่เป็นจริง
    };

    public static String question5[] = {
            "ข้อที่ 1: ฟังก์ชัน (Function) ใน JavaScript คืออะไร?",
            "ข้อที่ 2: ฟังก์ชันแบบใดที่สามารถเรียกใช้ก่อนประกาศได้?",
            "ข้อที่ 3: ข้อใดเป็นคุณสมบัติของ Arrow Function ใน JavaScript?",
            "ข้อที่ 4: ข้อใดเป็นข้อดีของการใช้ฟังก์ชัน?",
            "ข้อที่ 5: ฟังก์ชันแบบ Callback Function คืออะไร?",
            "ข้อที่ 6: ข้อใดเป็นข้อแตกต่างระหว่าง Function Declaration และ Function Expression?",
            "ข้อที่ 7: ฟังก์ชันที่มี return ใช้ทำอะไร?",
            "ข้อที่ 8: ฟังก์ชันแบบ IIFE (Immediately Invoked Function Expression) มีจุดเด่นอย่างไร?",
            "ข้อที่ 9: ข้อใดคือประโยชน์ของการใช้ Rest Parameters (...args) ในฟังก์ชัน?",
            "ข้อที่ 10: ฟังก์ชันที่มี Default Parameters มีข้อดีอย่างไร?",
    };

    // choices
    public static String choices5[][] = {
            {"ตัวแปรชนิดหนึ่งที่เก็บค่าตัวเลข", "คำสั่งที่ใช้เรียกใช้งาน HTML", "คำสั่งที่ใช้เปลี่ยนสีของหน้าเว็บ", "กลุ่มคำสั่งที่สามารถเรียกใช้ซ้ำได้"},
            {"Function Expression", "Function Declaration", "Arrow Function", "Callback Function"},
            {"ใช้ได้เฉพาะกับ for loop เท่านั้น", "ต้องใช้ function นำหน้าเสมอ", "ไม่มี this เป็นของตัวเอง", "ไม่สามารถรับพารามิเตอร์ได้"},
            {"ใช้เปลี่ยนสีพื้นหลังของหน้าเว็บ", "ใช้ประกาศตัวแปรเท่านั้น", "ทำให้โค้ดสั้นและอ่านง่ายขึ้น", "ทำให้โปรแกรมทำงานช้าลง"},
            {"ฟังก์ชันที่ไม่มีพารามิเตอร์", "ฟังก์ชันที่ถูกส่งเป็นพารามิเตอร์ไปยังฟังก์ชันอื่น", "ฟังก์ชันที่ไม่สามารถเรียกใช้ได้", "ฟังก์ชันที่ใช้เปลี่ยนค่า CSS ของเว็บ"},
            {"Function Declaration ใช้ได้เฉพาะกับตัวเลขเท่านั้น", "Function Expression ใช้ได้เฉพาะกับตัวแปรชนิด const เท่านั้น", "Function Declaration ต้องใช้ => เท่านั้น", "Function Expression ไม่สามารถเรียกใช้ก่อนการประกาศได้"},
            {"ใช้เพิ่มค่าของตัวแปรอัตโนมัติ", "ใช้เปลี่ยนสีของปุ่มบนหน้าเว็บ", "ทำให้ฟังก์ชันทำงานไม่หยุด", "ส่งค่ากลับออกจากฟังก์ชัน"},
            {"ใช้ได้เฉพาะกับ while loop", "ไม่สามารถใช้ตัวแปรภายในฟังก์ชันได้", "ถูกเรียกใช้งานทันทีที่ประกาศ", "ใช้เฉพาะกับการจัดการข้อมูลในฐานข้อมูล"},
            {"ใช้แทน return", "ใช้กำหนดค่าตัวเลขเท่านั้น", "ใช้รับค่าพารามิเตอร์หลายค่าภายในฟังก์ชัน", "ใช้เปลี่ยนค่าของ this"},
            {"ใช้เปลี่ยนค่าของ console.log", "ช่วยให้ฟังก์ชันสามารถทำงานได้แม้ไม่มีการส่งค่าเข้าไป", "ใช้กำหนดค่าตัวเลขเท่านั้น", "ทำให้โค้ดช้าลงเมื่อใช้งาน"},
    };

    // answer index is (0, 1, 2, 3)
    public static int answer5[] = {
            3, // D) กลุ่มคำสั่งที่สามารถเรียกใช้ซ้ำได้
            1, // B) Function Declaration
            2, // C) ไม่มี this เป็นของตัวเอง
            2, // C) ทำให้โค้ดสั้นและอ่านง่ายขึ้น
            1, // B) ฟังก์ชันที่ถูกส่งเป็นพารามิเตอร์ไปยังฟังก์ชันอื่น
            3, // D) Function Expression ไม่สามารถเรียกใช้ก่อนการประกาศได้
            3, // D) ส่งค่ากลับออกจากฟังก์ชัน
            2, // C) ถูกเรียกใช้งานทันทีที่ประกาศ
            2, // C) ใช้รับค่าพารามิเตอร์หลายค่าภายในฟังก์ชัน
            1, // B) ช่วยให้ฟังก์ชันสามารถทำงานได้แม้ไม่มีการส่งค่าเข้าไป
    };

}